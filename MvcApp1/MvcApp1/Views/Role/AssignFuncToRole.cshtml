@model MvcApp1.Models.Role
@{
    ViewBag.Title = "AssignFuncToRole";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!--https://makitweb.com/how-to-check-and-uncheck-all-using-jquery-and-javascript/-->
<script>
</script>
<h2>Assign Functions To Role</h2>
@using (Html.BeginForm("AssignFuncToRole", "Role", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RoleId)
    @Html.HiddenFor(model => model.UniqueName)
    @Html.HiddenFor(model => model.DisplayName)
    @Html.HiddenFor(model => model.IsDisabled)
    <div>
        <dl class="dl-horizontal">
            <dt>@Html.DisplayNameFor(model => model.UniqueName)</dt>
            <dd>@Html.DisplayFor(model => model.UniqueName)</dd>
            <dt>@Html.DisplayNameFor(model => model.DisplayName)</dt>
            <dd>@Html.DisplayFor(model => model.DisplayName)</dd>
            <dt>@Html.DisplayNameFor(model => model.IsDisabled)</dt>
            <dd>@Html.DisplayFor(model => model.IsDisabled)</dd>
        </dl>
    </div>
    if ((Model?.AppFunctionList?.Count ?? 0) < 1)
    {
        <p>No App Functions!</p>
    }
    else
    {
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th><input type="checkbox" id="AllIsSelected" name="AllIsSelected" /></th>
                        <th>&nbsp;</th>
                        <th>&nbsp;</th>
                        <th>&nbsp;</th>
                        <th>@Html.DisplayNameFor(model => model.AppFunctionList[0].AppFunctionId)</th>
                        <th>@Html.DisplayNameFor(model => model.AppFunctionList[0].UniqueName)</th>
                        <th>@Html.DisplayNameFor(model => model.AppFunctionList[0].DisplayName)</th>
                        <th>@Html.DisplayNameFor(model => model.AppFunctionList[0].AppFuncLevelId)</th>
                        <th>@Html.DisplayNameFor(model => model.AppFunctionList[0].IsDisabled)</th>
                        <th>@Html.DisplayNameFor(model => model.AppFunctionList[0].IsNavItem)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.AppFunctionList)
                    {
                        if (item != null)
                        {
                            <tr>
                                <td>&nbsp;</td>
                                <td><input type="checkbox" id="Chk@{@item.AppFunctionId}" name="IsSelectedArray" value="@{@item.AppFunctionId}" @(item.IsSelected ? "checked" : "") /></td>
                                <td colspan="3">@Html.DisplayFor(x => item.AppFunctionId)</td>
                                <td>@Html.DisplayFor(x => item.UniqueName)</td>
                                <td>@Html.DisplayFor(x => item.DisplayName)</td>
                                <td>@Html.DisplayFor(x => item.AppFuncLevelId)</td>
                                <td>@Html.DisplayFor(x => item.IsDisabled)</td>
                                <td>@Html.DisplayFor(x => item.IsNavItem)</td>
                            </tr>
    if ((item?.ChildList?.Count ?? 0) > 0)
    {
        foreach (var item2 in item.ChildList)
        {
            if (item2 != null)
            {
                                        <tr>
                                            <td>&nbsp;</td>
                                            <td>&nbsp;</td>
                                            <td><input type="checkbox" id="Chk@{@item2.AppFunctionId}" name="IsSelectedArray" value="@{@item2.AppFunctionId}" @(item2.IsSelected ? "checked" : "") /></td>
                                            <td colspan="2">@Html.DisplayFor(x => item2.AppFunctionId)</td>
                                            <td>@Html.DisplayFor(x => item2.UniqueName)</td>
                                            <td>@Html.DisplayFor(x => item2.DisplayName)</td>
                                            <td>@Html.DisplayFor(x => item2.AppFuncLevelId)</td>
                                            <td>@Html.DisplayFor(x => item2.IsDisabled)</td>
                                            <td>@Html.DisplayFor(x => item2.IsNavItem)</td>
                                        </tr>
    if ((item2?.ChildList?.Count ?? 0) > 0)
    {
        foreach (var item3 in item2.ChildList)
        {
            if (item3 != null)
            {
                                                    <tr>
                                                        <td>&nbsp;</td>
                                                        <td>&nbsp;</td>
                                                        <td>&nbsp;</td>
                                                        <td><input type="checkbox" id="Chk@{@item3.AppFunctionId}" name="IsSelectedArray" value="@{@item3.AppFunctionId}" @(item3.IsSelected ? "checked" : "") /></td>
                                                        <td>@Html.DisplayFor(x => item3.AppFunctionId)</td>
                                                        <td>@Html.DisplayFor(x => item3.UniqueName)</td>
                                                        <td>@Html.DisplayFor(x => item3.DisplayName)</td>
                                                        <td>@Html.DisplayFor(x => item3.AppFuncLevelId)</td>
                                                        <td>@Html.DisplayFor(x => item3.IsDisabled)</td>
                                                        <td>@Html.DisplayFor(x => item3.IsNavItem)</td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    }
    <input type="submit" value="Assign" class="btn btn-default" />
}
<p>&nbsp;</p>
<p>@Html.ActionLink("Role", "Index") | @Html.ActionLink("Home", "Index", "Home")</p>