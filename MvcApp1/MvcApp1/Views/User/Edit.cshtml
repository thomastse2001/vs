@model MvcApp1.Models.User
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    function ChkIsUpdateHash() {
        if ($("#IsUpdateHash").is(":checked")) {
            $("#Password").removeAttr("disabled");
            $("#RetypedPassword").removeAttr("disabled");
        } else {
            $("#Password").val("");
            $("#RetypedPassword").val("");
            $("#Password").attr("disabled", "disabled");
            $("#RetypedPassword").attr("disabled", "disabled");
        }
    }
</script>
<h2>Edit User</h2>
<!--@*using (Html.BeginForm())*@-->
@using (Html.BeginForm("Edit", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>User</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserId)
    <div class="form-group">
        @Html.LabelFor(model => model.LoginName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LoginName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LoginName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.Hash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hash, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hash, "", new { @class = "text-danger" })
            </div>
        </div>
    *@
    <div class="form-group">
        @Html.LabelFor(model => model.IsUpdateHash, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.IsUpdateHash, new { @onclick = "ChkIsUpdateHash()" })
                @Html.ValidationMessageFor(model => model.IsUpdateHash, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* https://stackoverflow.com/questions/29329997/create-password-field-html-textboxfor *@
            @*Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" }, disabled = "disabled" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RetypedPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*Html.EditorFor(model => model.RetypedPassword, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.PasswordFor(model => model.RetypedPassword, new { htmlAttributes = new { @class = "form-control" }, disabled = "disabled" })
            @Html.ValidationMessageFor(model => model.RetypedPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.IsDisabled, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsDisabled)
                @Html.ValidationMessageFor(model => model.IsDisabled, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    @*<div class="form-group">
                    @Html.LabelFor(model => model.CreatedDt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CreatedDt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedDt, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                @Html.LabelFor(model => model.CreatedByDisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedByDisplayName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedByDisplayName, "", new { @class = "text-danger" })
                </div>
            </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.UpdatedDt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UpdatedDt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdatedDt, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
                    </div>
                </div>
            <div class="form-group">
            @Html.LabelFor(model => model.UpdatedByDisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedByDisplayName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdatedByDisplayName, "", new { @class = "text-danger" })
            </div>
        </div>
    *@
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <!--
    @*<input id="UiStatus" name="UiStatus" type="hidden" value="@MvcApp1.BAL.CommonHelper.UiStatus.Progress"/>*@
    -->
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}
<div>@Html.ActionLink("User", "Index") | @Html.ActionLink("Home", "Index", "Home")</div>
