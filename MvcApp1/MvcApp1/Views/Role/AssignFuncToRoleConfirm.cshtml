@model MvcApp1.Models.Role
@{
    ViewBag.Title = "AssignFuncToRoleConfirm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Assign Functions To Role - Confirm</h2>
@using (Html.BeginForm("AssignFuncToRoleConfirm", "Role", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.RoleId)
    @Html.HiddenFor(model => model.UniqueName)
    @Html.HiddenFor(model => model.DisplayName)
    @Html.HiddenFor(model => model.IsDisabled)
    <div>
        <dl class="dl-horizontal">
            <dt>@Html.DisplayNameFor(model => model.UniqueName)</dt>
            <dd>@Html.DisplayFor(model => model.UniqueName)</dd>
            <dt>@Html.DisplayNameFor(model => model.DisplayName)</dt>
            <dd>@Html.DisplayFor(model => model.DisplayName)</dd>
            <dt>@Html.DisplayNameFor(model => model.IsDisabled)</dt>
            <dd>@Html.DisplayFor(model => model.IsDisabled)</dd>
        </dl>
    </div>
    <h4>Selected Functions:</h4>
    if ((Model.AppFunctionList?.Count ?? 0) < 1)
    {
        <p>No functions.</p>
    }
    else
    {
        <table class="table">
            <tr>
                <th>&nbsp;</th>
                <th>&nbsp;</th>
                <th>&nbsp;</th>
                <th>@Html.DisplayNameFor(model => model.AppFunctionList[0].AppFunctionId)</th>
                <th>@Html.DisplayNameFor(model => model.AppFunctionList[0].UniqueName)</th>
                <th>@Html.DisplayNameFor(model => model.AppFunctionList[0].DisplayName)</th>
                <th>@Html.DisplayNameFor(model => model.AppFunctionList[0].AppFuncLevelId)</th>
                <th>@Html.DisplayNameFor(model => model.AppFunctionList[0].IsDisabled)</th>
                <th>@Html.DisplayNameFor(model => model.AppFunctionList[0].IsNavItem)</th>
            </tr>
            @foreach (var item in Model.AppFunctionList)
            {
                if (item?.IsSelected ?? false)
                {
            <tr>
                <td><input type="checkbox" @(item.IsSelected ? "checked" : "") disabled/><input type="hidden" name="IsSelectedArray" value="@{@item.AppFunctionId}"/></td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>@Html.DisplayFor(x => item.AppFunctionId)</td>
                <td>@Html.DisplayFor(x => item.UniqueName)</td>
                <td>@Html.DisplayFor(x => item.DisplayName)</td>
                <td>@Html.DisplayFor(x => item.AppFuncLevelId)</td>
                <td>@Html.DisplayFor(x => item.IsDisabled)</td>
                <td>@Html.DisplayFor(x => item.IsNavItem)</td>
            </tr>
    if ((item?.ChildList?.Count ?? 0) > 0)
    {
        foreach (var item2 in item.ChildList)
        {
            if (item2?.IsSelected ?? false)
            {
                <tr>
                    <td>&nbsp;</td>
                    <td><input type="checkbox" @(item2.IsSelected ? "checked" : "") disabled /><input type="hidden" name="IsSelectedArray" value="@{@item2.AppFunctionId}" /></td>
                    <td>&nbsp;</td>
                    <td>@Html.DisplayFor(x => item2.AppFunctionId)</td>
                    <td>@Html.DisplayFor(x => item2.UniqueName)</td>
                    <td>@Html.DisplayFor(x => item2.DisplayName)</td>
                    <td>@Html.DisplayFor(x => item2.AppFuncLevelId)</td>
                    <td>@Html.DisplayFor(x => item2.IsDisabled)</td>
                    <td>@Html.DisplayFor(x => item2.IsNavItem)</td>
                </tr>
    if ((item2.ChildList?.Count ?? 0) > 0)
    {
        foreach (var item3 in item2.ChildList)
        {
            if (item3?.IsSelected ?? false)
            {
                <tr>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                    <td><input type="checkbox" @(item3.IsSelected ? "checked" : "") disabled /><input type="hidden" name="IsSelectedArray" value="@{@item3.AppFunctionId}" /></td>
                    <td>@Html.DisplayFor(x => item3.AppFunctionId)</td>
                    <td>@Html.DisplayFor(x => item3.UniqueName)</td>
                    <td>@Html.DisplayFor(x => item3.DisplayName)</td>
                    <td>@Html.DisplayFor(x => item3.AppFuncLevelId)</td>
                    <td>@Html.DisplayFor(x => item3.IsDisabled)</td>
                    <td>@Html.DisplayFor(x => item3.IsNavItem)</td>
                </tr>
                                }
                            }
                        }
                    }
                }
            }
        }
    }
        </table>
    }
    <div>
        <div class="col-md-offset-2 col-md-10">
            <input id="UiConfirm" name="UiConfirm" type="submit" value="Confirm" class="btn btn-default" />
            <input id="UiBack" name="UiBack" type="submit" value="Back" class="btn btn-default" />
        </div>
    </div>
}
<p>@Html.ActionLink("Role", "Index") | @Html.ActionLink("Home", "Index", "Home")</p>